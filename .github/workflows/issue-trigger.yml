name: ðŸ¤– Leer Issue y Disparar Job

on:
  issues:
    types: [opened]

jobs:
  parse-issue-and-run-workflow:
    runs-on: ubuntu-latest
    
    # Solo se ejecuta si el issue tiene la etiqueta 'databricks-run'
    if: contains(github.event.issue.labels.*.name, 'databricks-run')

    steps:
      - name: 1. Checkout del repositorio
        uses: actions/checkout@v4

      - name: 2. Parsear campos del formulario
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body;
            
            // FunciÃ³n para extraer valores del formulario
            function extractValue(body, fieldName) {
              const regex = new RegExp(`### ${fieldName}\\s*\\n\\s*(.+?)\\s*\\n`, 'i');
              const match = body.match(regex);
              return match ? match[1].trim() : '';
            }
            
            // Extraer todos los campos
            const targetProject = extractValue(body, 'Nombre del Proyecto');
            const databricksJobId = extractValue(body, 'ID del Job de Databricks');
            const executionType = extractValue(body, 'Tipo de EjecuciÃ³n');
            const periodoUnico = extractValue(body, 'Periodo Ãšnico \\(YYYYMM\\)');
            const periodoInicio = extractValue(body, 'Periodo de Inicio \\(YYYYMM\\)');
            const periodoFin = extractValue(body, 'Periodo de Fin \\(YYYYMM\\)');
            
            // Guardar como outputs
            core.setOutput('target_project', targetProject);
            core.setOutput('databricks_job_id', databricksJobId);
            core.setOutput('execution_type', executionType);
            core.setOutput('periodo_unico', periodoUnico);
            core.setOutput('periodo_inicio', periodoInicio);
            core.setOutput('periodo_fin', periodoFin);
            
            // Log para debug
            console.log('Valores extraÃ­dos:');
            console.log('Target Project:', targetProject);
            console.log('Job ID:', databricksJobId);
            console.log('Execution Type:', executionType);

      - name: 3. AÃ±adir comentario al Issue (Feedback)
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Â¡Issue recibido! Intentando disparar el workflow... \n\n' +
                    '**Proyecto:** ${{ steps.parse.outputs.target_project }}\n' +
                    '**Job ID:** ${{ steps.parse.outputs.databricks_job_id }}\n' +
                    '**Tipo:** ${{ steps.parse.outputs.execution_type }}\n'
            })

      - name: 4. Llamar al Workflow Reutilizable (El "Motor")
        uses: ./.github/workflows/run-databricks-job.yml
        with:
          target_project: ${{ steps.parse.outputs.target_project }}
          databricks_job_id: ${{ steps.parse.outputs.databricks_job_id }}
          execution_type: ${{ steps.parse.outputs.execution_type }}
          periodo_unico: ${{ steps.parse.outputs.periodo_unico }}
          periodo_inicio: ${{ steps.parse.outputs.periodo_inicio }}
          periodo_fin: ${{ steps.parse.outputs.periodo_fin }}